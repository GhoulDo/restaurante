spring.application.name=restaurante

# PostgreSQL Database Configuration
spring.datasource.url=jdbc:postgresql://dpg-d0rqqv49c44c73cgaftg-a.virginia-postgres.render.com:5432/restaurante_l47b
spring.datasource.username=admin_restaurante
spring.datasource.password=n0LXduY4klOGF8Tt3eBHTBg5EfKE8lYl
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false

# Server Configuration para Render
server.port=${PORT:8081}

# Keep-alive configuration
app.base-url=${RENDER_EXTERNAL_URL:http://localhost:8081}

# CORS Configuration
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=false

# Configuración de logging para producción
logging.level.com.proyecto.restaurante=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=WARN

# Thread pool para tareas asíncronas
spring.task.execution.pool.core-size=2
spring.task.execution.pool.max-size=4
spring.task.execution.pool.queue-capacity=100
spring.task.execution.thread-name-prefix=async-
